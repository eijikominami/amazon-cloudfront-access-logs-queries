AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    Stack that deploys a bucket which you can use as a target for your
    Amazon CloudFront access logs (use the prefix 'new/'). An event
    notification is configured so that new objects created will fire an
    AWS Lambda function that moves the objects to prefixes (under
    'partitioned-gz/') that adhere to the Apache Hive partitioning format.
    This way the data is easier to consume for big data tools (as Amazon
    Athena and AWS Glue).

Parameters:
  GlueDatabase:
    Type: String
    Default: 'cloudfront_access_logs'
    AllowedPattern: '[A-Za-z0-9\_]+'
    Description: >
        The Glue database name.
  GzKeyPrefix: 
    Type: String
    Default: 'partitioned-gz/'
    AllowedPattern: '[A-Za-z0-9\-\.]+/'
    Description: >
        Prefix of gzip'ed access log files that are moved to the Apache Hive
        like style. Including the trailing slash.
  NewKeyPrefix: 
    Type: String
    Default: 'new/'
    AllowedPattern: '[A-Za-z0-9\-\.]+/'
    Description: >
        Prefix of new access log files that are written by Amazon CloudFront.
        Including the trailing slash.
  ParquetKeyPrefix: 
    Type: String
    Default: 'partitioned-parquet/'
    AllowedPattern: '[A-Za-z0-9\-\.]+/'
    Description: >
        Prefix of parquet files that are created in Apache Hive
        like style by the CTAS query. Including the trailing slash.
  ResourcePrefix: 
    Type: String
    Default: CloudfrontLogsQueries
    Description: >
        Prefix that is used for the created resources (20 chars, a-z and 0-9 only)
  S3BucketName: 
    Type: String
    AllowedPattern: '[A-Za-z0-9\-\.]+'
    MinLength: 1
    Description: >
        Bucket name that is used for the created resources
  SNSForAlertArn:
    Type: String
    Default: ''
    Description: Amazon SNS Topic ARN for alert
  Environment:
    Type: String
    Default: development
    AllowedValues:
      - production
      - test
      - development
  TagKey:
    Type: String
    Default: createdby
    AllowedPattern: .+
  TagValue:
    Type: String
    Default: aws-cloudformation-samples
    AllowedPattern: .+

Conditions:
  CreateSNSForAlert: !Not [ !Equals [ !Ref SNSForAlertArn, ''] ]

Resources:
    IAMRoleForTransformPartFn:
      Type: 'AWS::IAM::Role'
      Properties:
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Principal:
                Service: lambda.amazonaws.com
              Action: sts:AssumeRole
        Description: Lambda to access Athena, S3 and Glue.
        Policies:
          - PolicyName: CloudWatchLogs
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogStream
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - logs:PutLogEvents
                  Resource: '*' 
          - PolicyName: TransformPartFn
            PolicyDocument:
              Version: 2012-10-17
              Statement: 
                - Action: 
                  - athena:StartQueryExecution
                  - athena:GetQueryExecution
                  Resource: '*'
                  Effect: Allow
                - Action: 
                  - s3:ListBucket
                  - s3:GetBucketLocation
                  Resource: !Sub arn:aws:s3:::${S3BucketName}
                  Effect: Allow
                - Action: 
                  - s3:PutObject
                  - s3:GetObject
                  Resource: !Sub arn:aws:s3:::${S3BucketName}/*
                  Effect: Allow
                - Action: 
                  - glue:CreatePartition
                  - glue:GetDatabase
                  - glue:GetTable
                  - glue:BatchCreatePartition
                  - glue:GetPartition
                  - glue:GetPartitions
                  - glue:CreateTable
                  - glue:DeleteTable
                  - glue:DeletePartition
                  Resource: '*'
                  Effect: Allow
        RoleName: !Sub ${ResourcePrefix}-TransformPartFn-${AWS::Region}
        Tags:
          - Key: environment
            Value: !Ref Environment
          - Key: !Ref TagKey
            Value: !Ref TagValue
    IAMRoleForCreatePartFn:
      Type: 'AWS::IAM::Role'
      Properties:
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Principal:
                Service: lambda.amazonaws.com
              Action: sts:AssumeRole
        Description: Lambda to access X-Ray, DynamoDB, Kinesis and CloudWatch Logs.
        Policies:
          - PolicyName: CloudWatchLogs
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogStream
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - logs:PutLogEvents
                  Resource: '*' 
          - PolicyName: CreatePartFn
            PolicyDocument:
              Statement: 
                - Action: 
                  - athena:StartQueryExecution
                  - athena:GetQueryExecution
                  Resource: '*'
                  Effect: Allow
                - Action: 
                  - s3:ListBucket
                  - s3:GetBucketLocation
                  Resource: !Sub arn:aws:s3:::${S3BucketName}"
                  Effect: Allow
                - Action: 
                  - s3:PutObject
                  Resource: !Sub arn:aws:s3:::${S3BucketName}/*
                  Effect: Allow
                - Action: 
                  - glue:CreatePartition
                  - glue:GetDatabase
                  - glue:GetTable
                  - glue:BatchCreatePartition
                  Resource: '*'
                  Effect: Allow
        RoleName: !Sub ${ResourcePrefix}-CreatePartFn-${AWS::Region}
        Tags:
          - Key: environment
            Value: !Ref Environment
          - Key: !Ref TagKey
            Value: !Ref TagValue
    IAMRoleForMoveNewAccessLogsFn:
      Type: 'AWS::IAM::Role'
      Properties:
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Principal:
                Service: lambda.amazonaws.com
              Action: sts:AssumeRole
        Description: Lambda to access X-Ray, DynamoDB, Kinesis and CloudWatch Logs.
        Policies:
          - PolicyName: CloudWatchLogs
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogStream
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - logs:PutLogEvents
                  Resource: '*' 
          - PolicyName: MoveNewAccessLogsFn
            PolicyDocument:
              Version: 2012-10-17
              Statement: 
                - Action: 
                  - s3:GetObject
                  - s3:DeleteObject
                  Resource: !Sub arn:aws:s3:::${S3BucketName}/${NewKeyPrefix}*
                  Effect: Allow
                - Action: 
                  - s3:PutObject
                  Resource: !Sub arn:aws:s3:::${S3BucketName}/${GzKeyPrefix}*
                  Effect: Allow
        RoleName: !Sub ${ResourcePrefix}-MoveNewAccessLogsFn-${AWS::Region}
        Tags:
          - Key: environment
            Value: !Ref Environment
          - Key: !Ref TagKey
            Value: !Ref TagValue
    TransformPartFn:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: functions/
            Handler: transformPartition.handler
            Runtime: nodejs14.x
            Timeout: 900
            Environment:
                Variables:
                    SOURCE_TABLE: !Ref PartitionedGzTable
                    TARGET_TABLE: !Ref PartitionedParquetTable
                    DATABASE: !Ref GlueDatabase
                    ATHENA_QUERY_RESULTS_LOCATION: !Sub "s3://${S3BucketName}/athena-query-results"
            Events:
              HourlyEvt:
                Type: Schedule
                Properties:
                  Schedule: cron(1 * * * ? *)
            Role: !GetAtt IAMRoleForTransformPartFn.Arn
            Tags:
              environment: !Ref Environment
              createdby: !Ref TagValue
    LogGroupForTransformPartFn:
      Type: AWS::Logs::LogGroup
      Properties: 
        LogGroupName: !Sub /aws/lambda/${TransformPartFn}
        RetentionInDays: 60
        Tags: 
          - Key: environment
            Value: !Ref Environment
          - Key: !Ref TagKey
            Value: !Ref TagValue
    AlarmLambdaTransformPartFn:
      Condition: CreateSNSForAlert
      Type: AWS::Serverless::Application
      Properties:
        Parameters:
          CustomAlarmName: !Ref ResourcePrefix
          SNSTopicArn: !Ref SNSForAlertArn
          MetricFilterPattern: ''
          FunctionResouceName: !Ref TransformPartFn
        Location:
          ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/cloudwatch-alarm-about-lambda
          SemanticVersion: 2.0.25
        Tags:
          environment: !Ref Environment
          createdby: !Ref TagValue
    CreatePartFn:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: functions/
            Handler: createPartitions.handler
            Runtime: nodejs14.x
            Timeout: 5
            Environment:
                Variables:
                    TABLE: !Ref PartitionedGzTable
                    DATABASE: !Ref GlueDatabase
                    ATHENA_QUERY_RESULTS_LOCATION: !Sub "s3://${S3BucketName}/athena-query-results"
            Events:
              HourlyEvt:
                Type: Schedule
                Properties:
                  Schedule: cron(55 * * * ? *)
            Role: !GetAtt IAMRoleForCreatePartFn.Arn
            Tags:
              environment: !Ref Environment
              createdby: !Ref TagValue
    LogGroupForCreatePartFn:
      Type: AWS::Logs::LogGroup
      Properties: 
        LogGroupName: !Sub /aws/lambda/${CreatePartFn}
        RetentionInDays: 60
        Tags: 
          - Key: environment
            Value: !Ref Environment
          - Key: !Ref TagKey
            Value: !Ref TagValue
    AlarmLambdaCreatePartFn:
      Condition: CreateSNSForAlert
      Type: AWS::Serverless::Application
      Properties:
        Parameters:
          CustomAlarmName: !Ref ResourcePrefix
          SNSTopicArn: !Ref SNSForAlertArn
          MetricFilterPattern: ''
          FunctionResouceName: !Ref CreatePartFn
        Location:
          ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/cloudwatch-alarm-about-lambda
          SemanticVersion: 2.0.25
        Tags:
          environment: !Ref Environment
          createdby: !Ref TagValue
    MoveNewAccessLogsFn:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: functions/
            Handler: moveAccessLogs.handler
            Runtime: nodejs14.x
            Timeout: 30
            Environment:
                Variables:
                    TARGET_KEY_PREFIX: !Ref GzKeyPrefix
            Role: !GetAtt IAMRoleForMoveNewAccessLogsFn.Arn
            Tags:
              environment: !Ref Environment
              createdby: !Ref TagValue
    LogGroupForMoveNewAccessLogsFn:
      Type: AWS::Logs::LogGroup
      Properties: 
        LogGroupName: !Sub /aws/lambda/${MoveNewAccessLogsFn}
        RetentionInDays: 60
        Tags: 
          - Key: environment
            Value: !Ref Environment
          - Key: !Ref TagKey
            Value: !Ref TagValue
    MoveNewAccessLogsFnPermission:
      Type: AWS::Lambda::Permission
      Properties:
        Action: lambda:InvokeFunction
        FunctionName: !GetAtt MoveNewAccessLogsFn.Arn
        Principal: s3.amazonaws.com
        SourceAccount: !Ref AWS::AccountId
    AlarmLambdaMoveNewAccessLogsFn:
      Condition: CreateSNSForAlert
      Type: AWS::Serverless::Application
      Properties:
        Parameters:
          CustomAlarmName: !Ref ResourcePrefix
          SNSTopicArn: !Ref SNSForAlertArn
          MetricFilterPattern: ''
          FunctionResouceName: !Ref MoveNewAccessLogsFn
        Location:
          ApplicationId: arn:aws:serverlessrepo:us-east-1:172664222583:applications/cloudwatch-alarm-about-lambda
          SemanticVersion: 2.0.25
        Tags:
          environment: !Ref Environment
          createdby: !Ref TagValue

# Glue Resources
# - Partitioned Gzip Table
# - Partitioned Parquet Table
# - Combined view of both tables

    PartitionedGzTable:
      Type: AWS::Glue::Table
      Properties:
        CatalogId: !Ref AWS::AccountId
        DatabaseName: !Ref GlueDatabase
        TableInput:
          Name: 'partitioned_gz'
          Description: 'Gzip logs delivered by Amazon CloudFront partitioned'
          TableType: EXTERNAL_TABLE
          Parameters: { "skip.header.line.count": "2" }
          PartitionKeys:
          - Name: year
            Type: string
          - Name: month
            Type: string
          - Name: day
            Type: string
          - Name: hour
            Type: string
          StorageDescriptor:
            OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
            Columns:
            - Name: date
              Type: date
            - Name: time
              Type: string
            - Name: location
              Type: string
            - Name: bytes
              Type: bigint
            - Name: request_ip
              Type: string
            - Name: method
              Type: string
            - Name: host
              Type: string
            - Name: uri
              Type: string
            - Name: status
              Type: int
            - Name: referrer
              Type: string
            - Name: user_agent
              Type: string
            - Name: query_string
              Type: string
            - Name: cookie
              Type: string
            - Name: result_type
              Type: string
            - Name: request_id
              Type: string
            - Name: host_header
              Type: string
            - Name: request_protocol
              Type: string
            - Name: request_bytes
              Type: bigint
            - Name: time_taken
              Type: float
            - Name: xforwarded_for
              Type: string
            - Name: ssl_protocol
              Type: string
            - Name: ssl_cipher
              Type: string
            - Name: response_result_type
              Type: string
            - Name: http_version
              Type: string
            - Name: fle_status
              Type: string
            - Name: fle_encrypted_fields
              Type: int
            - Name: c_port
              Type: int
            - Name: time_to_first_byte
              Type: float
            - Name: x_edge_detailed_result_type
              Type: string
            - Name: sc_content_type
              Type: string
            - Name: sc_content_len
              Type: bigint
            - Name: sc_range_start
              Type: bigint
            - Name: sc_range_end
              Type: bigint
            InputFormat: org.apache.hadoop.mapred.TextInputFormat
            Location: !Sub "s3://${S3BucketName}/${GzKeyPrefix}"
            SerdeInfo:
              Parameters:
                field.delim": "\t"
                serialization.format: "\t"
              SerializationLibrary: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
    PartitionedParquetTable:
      Type: AWS::Glue::Table
      Properties:
        CatalogId: !Ref AWS::AccountId
        DatabaseName: !Ref GlueDatabase
        TableInput:
          Name: 'partitioned_parquet'
          Description: 'Parquet format access logs as transformed from gzip version'
          TableType: EXTERNAL_TABLE
          Parameters: { 'has_encrypted_data': 'false', 'parquet.compression': 'SNAPPY' }
          PartitionKeys:
          - Name: year
            Type: string
          - Name: month
            Type: string
          - Name: day
            Type: string
          - Name: hour
            Type: string
          StorageDescriptor:
            OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
            Columns:
            - Name: date
              Type: date
            - Name: time
              Type: string
            - Name: location
              Type: string
            - Name: bytes
              Type: bigint
            - Name: request_ip
              Type: string
            - Name: method
              Type: string
            - Name: host
              Type: string
            - Name: uri
              Type: string
            - Name: status
              Type: int
            - Name: referrer
              Type: string
            - Name: user_agent
              Type: string
            - Name: query_string
              Type: string
            - Name: cookie
              Type: string
            - Name: result_type
              Type: string
            - Name: request_id
              Type: string
            - Name: host_header
              Type: string
            - Name: request_protocol
              Type: string
            - Name: request_bytes
              Type: bigint
            - Name: time_taken
              Type: float
            - Name: xforwarded_for
              Type: string
            - Name: ssl_protocol
              Type: string
            - Name: ssl_cipher
              Type: string
            - Name: response_result_type
              Type: string
            - Name: http_version
              Type: string
            - Name: fle_status
              Type: string
            - Name: fle_encrypted_fields
              Type: int
            - Name: c_port
              Type: int
            - Name: time_to_first_byte
              Type: float
            - Name: x_edge_detailed_result_type
              Type: string
            - Name: sc_content_type
              Type: string
            - Name: sc_content_len
              Type: bigint
            - Name: sc_range_start
              Type: bigint
            - Name: sc_range_end
              Type: bigint
            InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
            Location: !Sub "s3://${S3BucketName}/${ParquetKeyPrefix}"
            SerdeInfo:
              SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
    CombinedView:
      Type: AWS::Glue::Table
      Properties:
        CatalogId: !Ref AWS::AccountId
        DatabaseName: !Ref GlueDatabase
        TableInput:
          Name: 'combined'
          Description: 'combined view over gzip and parquet tables'
          TableType: VIRTUAL_VIEW
          Parameters: { 'presto_view': 'true' }
          PartitionKeys: []
          StorageDescriptor:
            Columns:
            - Name: date
              Type: date
            - Name: time
              Type: string
            - Name: location
              Type: string
            - Name: bytes
              Type: bigint
            - Name: request_ip
              Type: string
            - Name: method
              Type: string
            - Name: host
              Type: string
            - Name: uri
              Type: string
            - Name: status
              Type: int
            - Name: referrer
              Type: string
            - Name: user_agent
              Type: string
            - Name: query_string
              Type: string
            - Name: cookie
              Type: string
            - Name: result_type
              Type: string
            - Name: request_id
              Type: string
            - Name: host_header
              Type: string
            - Name: request_protocol
              Type: string
            - Name: request_bytes
              Type: bigint
            - Name: time_taken
              Type: float
            - Name: xforwarded_for
              Type: string
            - Name: ssl_protocol
              Type: string
            - Name: ssl_cipher
              Type: string
            - Name: response_result_type
              Type: string
            - Name: http_version
              Type: string
            - Name: fle_status
              Type: string
            - Name: fle_encrypted_fields
              Type: int
            - Name: c_port
              Type: int
            - Name: time_to_first_byte
              Type: float
            - Name: x_edge_detailed_result_type
              Type: string
            - Name: sc_content_type
              Type: string
            - Name: sc_content_len
              Type: bigint
            - Name: sc_range_start
              Type: bigint
            - Name: sc_range_end
              Type: bigint
            - Name: year
              Type: string
            - Name: month
              Type: string
            - Name: day
              Type: string
            - Name: hour
              Type: string
            - Name: file
              Type: string
            SerdeInfo: {}
          ViewOriginalText:
            Fn::Join:
            - ''
            - - '/* Presto View: '
              - Fn::Base64:
                  Fn::Sub:
                  - |- 
                    {
                      "originalSql": "SELECT *, \"$path\" as file FROM ${database}.${partitioned_gz_table} WHERE (concat(year, month, day, hour) >= date_format(date_trunc('hour', ((current_timestamp - INTERVAL  '15' MINUTE) - INTERVAL  '1' HOUR)), '%Y%m%d%H')) UNION ALL SELECT *, \"$path\" as file FROM ${database}.${partitioned_parquet_table} WHERE (concat(year, month, day, hour) < date_format(date_trunc('hour', ((current_timestamp - INTERVAL  '15' MINUTE) - INTERVAL  '1' HOUR)), '%Y%m%d%H'))",
                      "catalog": "awsdatacatalog",
                      "schema": "${database}",
                      "columns": [
                        {"name": "date", "type": "date"},
                        {"name": "time", "type": "varchar"},
                        {"name": "location", "type": "varchar"},
                        {"name": "bytes", "type": "bigint"},
                        {"name": "request_ip", "type": "varchar"},
                        {"name": "method", "type": "varchar"},
                        {"name": "host", "type": "varchar"},
                        {"name": "uri", "type": "varchar"},
                        {"name": "status", "type": "integer"},
                        {"name": "referrer", "type": "varchar"},
                        {"name": "user_agent", "type": "varchar"},
                        {"name": "query_string", "type": "varchar"},
                        {"name": "cookie", "type": "varchar"},
                        {"name": "result_type", "type": "varchar"},
                        {"name": "request_id", "type": "varchar"},
                        {"name": "host_header", "type": "varchar"},
                        {"name": "request_protocol", "type": "varchar"},
                        {"name": "request_bytes", "type": "bigint"},
                        {"name": "time_taken", "type": "real"},
                        {"name": "xforwarded_for", "type": "varchar"},
                        {"name": "ssl_protocol", "type": "varchar"},
                        {"name": "ssl_cipher", "type": "varchar"},
                        {"name": "response_result_type", "type": "varchar"},
                        {"name": "http_version", "type": "varchar"},
                        {"name": "fle_status", "type": "varchar"},
                        {"name": "fle_encrypted_fields", "type": "integer"},
                        {"name": "c_port", "type": "integer"},
                        {"name": "time_to_first_byte", "type": "real"},
                        {"name": "x_edge_detailed_result_type", "type": "varchar"},
                        {"name": "sc_content_type", "type": "varchar"},
                        {"name": "sc_content_len", "type": "bigint"},
                        {"name": "sc_range_start", "type": "bigint"},
                        {"name": "sc_range_end", "type": "bigint"},
                        {"name": "year", "type": "varchar"},
                        {"name": "month", "type": "varchar"},
                        {"name": "day", "type": "varchar"},
                        {"name": "hour", "type": "varchar"},
                        {"name": "file", "type": "varchar"}
                      ]
                    }
                  - { database: !Ref GlueDatabase,
                    partitioned_gz_table: !Ref PartitionedGzTable,
                    partitioned_parquet_table: !Ref PartitionedParquetTable }
              - ' */'

Outputs:
  MoveNewAccessLogsFnArn:
    Description: The ARN of MoveNewAccessLogsFn
    Value: !GetAtt MoveNewAccessLogsFn.Arn